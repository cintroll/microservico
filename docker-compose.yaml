version: '3'
services:
    config:
        image: configserver:latest
        build: ./configserver
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/healthcheck"]
            interval: 10s
            timeout: 2s
            retries: 3
        ports:
            - "8000:8080"
        volumes: 
            - ./configs:/opt/configserver/configs
        networks:
            - microservico-net

    discover:
        image: discover:latest
        build: ./discover
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8761/healthcheck"]
            interval: 10s
            timeout: 2s
            retries: 3
        ports:
            - "7000:8761"
        networks:
            - microservico-net

    broker:
        image: rabbitmq:3-management
        healthcheck:
            test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
            interval: 10s
            timeout: 2s
            retries: 3
        ports:
            - 9000:15672
            - 5671-5672:5671-5672
        networks: 
            - microservico-net
    
    support:
        image: supportservice:latest
        build: ./supportservice
        depends_on: 
            supportDB:
                condition: service_healthy
            broker:
                condition: service_healthy
            router: 
                condition: service_healthy
        ports:
            - "6001:6001"
        environment: 
            - CONFIG_URL=http://config:8080/
            - APP_PROFILE=prod
        networks:
            - microservico-net

    router:
        image: router:latest
        build: ./router
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:4000/healthcheck"]
            interval: 10s
            timeout: 2s
            retries: 3
        depends_on: 
            config: 
                condition: service_healthy
            discover: 
                condition: service_healthy
        ports:
            - "4000:4000"
        environment: 
            - CONFIG_URL=http://config:8080/
            - APP_PROFILE=prod
        networks:
            - microservico-net 

    supportDB:
        image: mysql:8
        command: --default-authentication-plugin=mysql_native_password
        healthcheck:
            test: ["CMD-SHELL", "mysqladmin ping --silent"]
            interval: 10s
            timeout: 5s
            retries: 5
        ports: 
            - "3306:3306"
        environment: 
            - MYSQL_ROOT_PASSWORD=fiapteste
        networks:
            - microservico-net
        volumes: 
            - ./supportservice/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql

    movies:
        image: movies:latest
        build: ./movies
        environment:
            - CONFIG_URL=http://config:8080/
            - APP_PROFILE=prod
        ports:
            - "3000:3000"  
        depends_on:
            moviesDB:
                condition: service_healthy
            router: 
                condition: service_healthy                
        networks:
            - microservico-net         

    moviesDB:
        image: postgres
        environment:
            POSTGRES_PASSWORD: "admin"
            POSTGRES_DB: "movies"
            POSTGRES_USER: "admin"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin"]
            interval: 10s
            timeout: 5s
            retries: 5
        ports:
            - "15432:5432"  
        volumes:
            - /var/lib/postgresql/data
        networks:
            -  microservico-net

    userdb:
        image: mariadb:focal
        command: '--default-authentication-plugin=mysql_native_password'
        ports:
            - 3307:3306
        restart: always
        secrets:
            - db-password
        volumes:
            - ./db/user.sql:/docker-entrypoint-initdb.d/user.sql
        networks:
            - microservico-net
        environment:
            - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password

    app:
        depends_on:
            - userdb
        build: app
        restart: always
        secrets:
            - db-password
        networks:
            - microservico-net
        ports:
            - 5000:5000

networks:
    microservico-net:
secrets:
    db-password:
        file: db/password.txt